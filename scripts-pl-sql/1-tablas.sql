/**************************************
TABLAS DE APROVISIONAMIENTO Y PEDIDOS
***************************************/
/*Borrado de Tablas (Orden de dependencias)*/

DROP TABLE LineasListaCompra;
DROP TABLE ListasCompra;
DROP TABLE LineasVentaEspecial;
DROP TABLE LineasVenta;
DROP TABLE Ventas;
DROP TABLE Empleados;
DROP TABLE Clientes;
DROP TABLE Lotes;
DROP TABLE Precios;
DROP TABLE Productos;
DROP TABLE Categorias;

/*Definición de Tablas*/

CREATE TABLE Categorias
(ID_CAT NUMBER(5) PRIMARY KEY,
nombre VARCHAR2(30) NOT NULL UNIQUE,
ID_PCAT NUMBER(5),
    CONSTRAINT no_autoanidar CHECK(ID_CAT != ID_PCAT),
    FOREIGN KEY(ID_PCAT) REFERENCES Categorias ON DELETE SET NULL);/

CREATE TABLE Productos
(ID_PRO NUMBER(5) PRIMARY KEY,
nombre VARCHAR2(20) NOT NULL UNIQUE,
caducidad INTEGER,
    CONSTRAINT numeroDeDiasPositivo CHECK(0<=caducidad),
stockMin NUMBER(9,3),
    CONSTRAINT stockMinimo_Positivo CHECK(0<=stockMin),
ID_CAT NUMBER(5),
    FOREIGN KEY(ID_CAT) REFERENCES Categorias ON DELETE SET NULL);/

CREATE TABLE Precios(
ID_PRE NUMBER(6) PRIMARY KEY,
fecha DATE NOT NULL,
precioUnitario NUMBER(8,3) NOT NULL, 
    CONSTRAINT precioUnitario_Positivo CHECK(0<=precioUnitario),
ID_PRO NUMBER(5) NOT NULL, FOREIGN KEY(ID_PRO) REFERENCES Productos ON DELETE CASCADE);/

CREATE TABLE Lotes(
ID_L NUMBER(6) PRIMARY KEY,
cantidad NUMBER(9,3) NOT NULL,
fechaEntrada DATE NOT NULL,
precioCoste NUMBER(8,3) NOT NULL,
ID_PRO NUMBER(5), FOREIGN KEY(ID_PRO) REFERENCES Productos);/

CREATE TABLE Empleados
(ID_U NUMBER(6) PRIMARY KEY,
DNI VARCHAR2(9)NOT NULL UNIQUE,
pass VARCHAR2(30) NOT NULL,
nombre VARCHAR2(30) NOT NULL,
apellidos VARCHAR2(50) NOT NULL,
telefono VARCHAR2(9) NOT NULL,
email VARCHAR2(30) NOT NULL,
fechaNacimiento DATE NOT NULL,
direccion VARCHAR2(120) NOT NULL,
numeroDeCuenta VARCHAR2(24) NOT NULL,
NSS VARCHAR2(12) NOT NULL UNIQUE,
estaDeBaja NUMBER(1),
    CONSTRAINT estaDeBaja_Boolean CHECK(0 <= estaDeBaja AND estaDeBaja <= 1));/

CREATE TABLE Clientes
(ID_U NUMBER(6) PRIMARY KEY,
DNI VARCHAR2(9)NOT NULL UNIQUE,
pass VARCHAR2(30) NOT NULL,
nombre VARCHAR2(30) NOT NULL,
apellidos VARCHAR2(50) NOT NULL,
telefono VARCHAR2(9) NOT NULL,
email VARCHAR2(30) NOT NULL,
fechaNacimiento DATE NOT NULL,
direccion VARCHAR2(120) NOT NULL);/

CREATE TABLE Ventas(
ID_V NUMBER(6) PRIMARY KEY,
fechaRealizacion DATE NOT NULL,
fechaRecogida DATE NOT NULL,
estadoVenta VARCHAR2(10), CONSTRAINT enumeradoEstadosVenta
    CHECK( estadoVenta IN ('PENDIENTE','DESPACHADO','ENTREGADO','CANCELADO') ),
ID_E NUMBER(6), FOREIGN KEY(ID_E) REFERENCES Empleados(ID_U),
ID_C NUMBER(6), FOREIGN KEY(ID_C) REFERENCES Clientes (ID_U));/

CREATE TABLE LineasVenta(
ID_LV NUMBER(6) PRIMARY KEY,
cantidadVendida NUMBER(9,3) NOT NULL,
ID_L NUMBER(5), FOREIGN KEY(ID_L) REFERENCES Lotes ON DELETE CASCADE,
ID_PRE NUMBER(5), FOREIGN KEY(ID_PRE) REFERENCES Precios,
ID_V NUMBER(6), FOREIGN KEY(ID_L) REFERENCES Ventas);/

CREATE TABLE LineasVentaEspecial(
ID_lVE NUMBER(3) PRIMARY KEY,
cantidad NUMBER(9,3) NOT NULL,
nombreProducto VARCHAR2(30) NOT NULL,
precioUnitario NUMBER(8,3), 
    CONSTRAINT precioUnitario_Venta_Positivo CHECK(0<=precioUnitario),
ID_V NUMBER(6), FOREIGN KEY(ID_V) REFERENCES Ventas ON DELETE CASCADE);/

CREATE TABLE ListasCompra
(ID_LC NUMBER(4) PRIMARY KEY,
fecha DATE UNIQUE NOT NULL);/

CREATE TABLE LineasListaCompra(
ID_lLC NUMBER(6) PRIMARY KEY,
cantidad NUMBER(9,3) NOT NULL,
ID_PRO NUMBER(6), FOREIGN KEY(ID_PRO) REFERENCES Productos ON DELETE CASCADE,
ID_LC NUMBER(4), FOREIGN KEY(ID_LC) REFERENCES ListasCompra ON DELETE CASCADE,
yaComprado CHAR(1) NOT NULL,
    CONSTRAINT yaComprado_Boolean CHECK(0 <= yaComprado AND yaComprado <= 1));/

/**************************************
TABLAS DE ORGANIZACIÓN DE HORARIOS
***************************************/

/*Borrado de Tablas (Orden Jerárquico)*/
DROP TABLE Encargados;

/*Definición de Tablas*/


CREATE TABLE Encargados
(ID_U NUMBER(6) PRIMARY KEY,
pass VARCHAR2(30) NOT NULL,
nombre VARCHAR2(30) NOT NULL,
apellidos VARCHAR2(50) NOT NULL,
telefono VARCHAR2(9) NOT NULL,
email VARCHAR2(30) NOT NULL,
fechaNacimiento DATE NOT NULL,
direccion VARCHAR2(120) NOT NULL);/